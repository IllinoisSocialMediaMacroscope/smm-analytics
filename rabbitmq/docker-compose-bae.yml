version: "3.3"

services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
    - "5672:5672"
    - "15672:15672"

  minio:
    image: minio/minio
    hostname: minio
    ports:
    - "9000:9000"
    volumes:
    - "bae_content_data:/tmp"
    command: server /tmp
    environment:
    - MINIO_ACCESS_KEY=${AWS_ACCESSKEY}
    - MINIO_SECRET_KEY=${AWS_ACCESSKEYSECRET}
    restart: unless-stopped

  algorithm_botometer_check_bot:
    build: ./botometer_check_bot
    image: socialmediamacroscope/botometer_check_bot:latest
    depends_on:
    - rabbitmq
    - minio
    command: python ./botometer_check_bot.py
    restart: unless-stopped

  algorithm_bulk_comparison:
    build: ./bulk_comparison
    image: socialmediamacroscope/bulk_comparison:latest
    depends_on:
    - rabbitmq
    - minio
    command: python ./bulk_comparison.py
    environment:
    - HOST_IP=${HOST_IP}
    - AWS_ACCESSKEY=${AWS_ACCESSKEY}
    - AWS_ACCESSKEYSECRET=${AWS_ACCESSKEYSECRET}
    - BUCKET_NAME=${BUCKET_NAME}
    restart: unless-stopped

  algorithm_check_screen_name:
    build: ./check_screen_name
    image: socialmediamacroscope/check_screen_name:latest
    depends_on:
    - rabbitmq
    - minio
    command: python ./check_screen_name.py
    restart: unless-stopped

  algorithm_collect_timeline:
    build: ./collect_timeline
    image: socialmediamacroscope/collect_timeline:latest
    depends_on:
    - rabbitmq
    - minio
    command: python ./collect_timeline.py
    environment:
    - HOST_IP=${HOST_IP}
    - AWS_ACCESSKEY=${AWS_ACCESSKEY}
    - AWS_ACCESSKEYSECRET=${AWS_ACCESSKEYSECRET}
    - BUCKET_NAME=${BUCKET_NAME}
    restart: unless-stopped

  algorithm_get_personality:
    build: ./get_personality
    image: socialmediamacroscope/get_personality:latest
    depends_on:
    - rabbitmq
    - minio
    command: python ./get_personality.py
    environment:
    - HOST_IP=${HOST_IP}
    - AWS_ACCESSKEY=${AWS_ACCESSKEY}
    - AWS_ACCESSKEYSECRET=${AWS_ACCESSKEYSECRET}
    - BUCKET_NAME=${BUCKET_NAME}
    restart: unless-stopped

  algorithm_get_sim_score:
    build: ./get_sim_score
    image: socialmediamacroscope/get_sim_score:latest
    depends_on:
    - rabbitmq
    - minio
    command: python ./get_sim_score.py
    environment:
    - HOST_IP=${HOST_IP}
    - AWS_ACCESSKEY=${AWS_ACCESSKEY}
    - AWS_ACCESSKEYSECRET=${AWS_ACCESSKEYSECRET}
    - BUCKET_NAME=${BUCKET_NAME}
    restart: unless-stopped

  algorithm_screen_name_prompt:
    build: ./screen_name_prompt
    image: socialmediamacroscope/screen_name_prompt:latest
    depends_on:
    - rabbitmq
    - minio
    command: python ./screen_name_prompt.py
    restart: unless-stopped

  bae_server:
    image: socialmediamacroscope/bae-server:latest
    depends_on:
    - rabbitmq
    - minio
    - algorithm_botometer_check_bot
    - algorithm_bulk_comparison
    - algorithm_check_screen_name
    - algorithm_collect_timeline
    - algorithm_get_personality
    - algorithm_get_sim_score
    - algorithm_screen_name_prompt
    ports:
    - "8001:8001"
    command: npm start
    environment:
    - DOCKERIZED=${DOCKERIZED}
    - HOST_IP=${HOST_IP}
    - AWS_ACCESSKEY=${AWS_ACCESSKEY}
    - AWS_ACCESSKEYSECRET=${AWS_ACCESSKEYSECRET}
    - TWITTER_CONSUMER_KEY=${TWITTER_CONSUMER_KEY}
    - TWITTER_CONSUMER_SECRET=${TWITTER_CONSUMER_SECRET}
    - MASHAPE_APIKEY=${MASHAPE_APIKEY}
    volumes:
    - "bae_content_data:/tmp"
    restart: unless-stopped

volumes:
  bae_content_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      # put your own local data path here
      device: ${LOCAL_MOUNT_PATH}
